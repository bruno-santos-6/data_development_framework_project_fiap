name: Data Pipeline CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_CONTAINER_REGISTRY: azcontaineregistryfiap.azurecr.io
  RESOURCE_GROUP: mba-bruno
  AKS_CLUSTER: k8s-mba-data-development-framework-aks

jobs:
  build-and-test:
    runs-on: MicrosoftWindowsDesktop:Windows-10:22h2-entn-g2:latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      run: |
        # For√ßa Docker para usar containers Linux
        if (docker info -f '{{.OSType}}') -ne 'linux' {
          & "$env:ProgramFiles\Docker\Docker\DockerCli.exe" -SwitchDaemon
        }
        docker info

    - name: Start Docker service
      run: |
        Start-Service Docker
        docker version

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and Push Ingestion Image
      working-directory: ./src/1-ingestion
      shell: pwsh
      run: |
        docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/ingestion:latest .
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/ingestion:latest

    - name: Build and Push Transformation Image
      working-directory: ./src/2-transform
      shell: pwsh
      run: |
        docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/transformation:latest .
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/transformation:latest

    - name: Build and Push Load-SQL Image
      working-directory: ./src/3-load
      shell: pwsh
      run: |
        docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/load-sql:latest .
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/load-sql:latest

  deploy-to-aks:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to AKS
      uses: azure/aks-set-context@v2
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER }}

    - name: Deploy Kubernetes manifests
      working-directory: ./infrastructure
      run: |
        kubectl apply -f aks-deployment.yml